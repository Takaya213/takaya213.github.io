import * as React from "react";
import {PropertyControls, ControlType} from "framer";

declare global {
	interface Window {
		Avatar: Array<Object>;
	}
}

interface Props {
	width: number;
	height: number;
	hasAvatar: boolean;
	img: string;
	initials: string;
	color: string;
	text: string;
}

export class Avatar extends React.Component<Props> {
	static defaultProps = {
		width: 50,
		height: 50,
		hasAvatar: true,
		img: null,
		initials:
			String.fromCharCode(65 + Math.floor(Math.random() * 26)) +
			String.fromCharCode(65 + Math.floor(Math.random() * 26)),
		color: "#09F",
		text: "#FFF"
	};

	state = {
		img: "https://twitter.com/krijnrijshouwer/profile_image?size=original",
		initials: "KR"
	};

	static propertyControls: PropertyControls<Props> = {
		hasAvatar: {
			type: ControlType.Boolean,
			enabledTitle: "Avatar",
			disabledTitle: "Initials",
			title: "Type"
		},
		initials: {type: ControlType.String, title: "Initials"},
		color: {type: ControlType.Color, title: "Color"},
		text: {type: ControlType.Color, title: "Text"}
	};

	componentDidMount() {
		if (window.Avatar) {
			this.setImage();
		} else {
			this.getImages();
		}
	}

	setImage() {
		const randomValue = Math.floor(Math.random() * (window.Avatar.length - 0));

		this.setState({img: window.Avatar[randomValue]["photo"]});
	}

	getImages() {
		const url = "https://uifaces.co/api?limit=500";

		// API call
		const xhr = new XMLHttpRequest();
		xhr.onreadystatechange = () => {
			if (xhr.readyState === 4) {
				window.Avatar = JSON.parse(xhr.response);
				this.setImage();
			}
		};
		xhr.open("GET", url, true);
		xhr.setRequestHeader("X-API-KEY", "8bf8424f2867f105540db258f0f77f");
		xhr.send();
	}

	render() {
		return (
			<div
				style={{
					width: this.props.width,
					height: this.props.height,
					backgroundColor: this.props.color,
					backgroundImage: this.props.hasAvatar
						? `url(${this.state.img})`
						: "none",
					backgroundSize: "cover",
					backgroundPosition: "center top",
					backgroundRepeat: "no-repeat",
					display: "flex",
					justifyContent: "center",
					alignItems: "center"
				}}
			>
				<div
					style={{
						visibility: this.props.hasAvatar ? "hidden" : "visible",
						fontSize: "16px",
						fontWeight: 700,
						textTransform: "uppercase",
						color: this.props.text,
						textAlign: "center",
						position: "relative"
					}}
				>
					<p>{this.props.initials}</p>
				</div>
			</div>
		);
	}
}
